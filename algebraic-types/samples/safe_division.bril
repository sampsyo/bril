@main(x: int, y: int) {
  quotient: sum<int, product<>> = call @safe_division x y;
  result: sum<int, product<>> = destruct quotient .int .unsafe;
.int:
  print result;
  ret;
.unsafe:
  v: bool = const false;
  print v;
  ret;
}

@safe_division(dividend: int, divisor: int): sum<int, product<>> {
  zero: int = const 0;
  unsafe: bool = eq divisor zero;
  br unsafe .unsafe .safe;
.safe:
  quotient: int = div dividend divisor;
  constructed: sum<int, product<>> = construct quotient 0;
  ret constructed;
.unsafe:
  packed: product<> = pack;
  constructed: sum<int, product<>> = construct packed 1;
  ret constructed;
}
